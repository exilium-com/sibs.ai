import{d as y,u as C,a as E,m as k,o as A,n as B,l as e,q as V,s as P,c as N,w as i,t as L,v as M,r as s,b as O,e as c,g as p,f as _}from"./main-DXoWvGcG.js";const S=_("p",null,"We are working hard for everyone to be able to use sibs.ai soon.",-1),T=_("br",null,null,-1),R=y({__name:"auth-done",setup(z){const{logout:g}=C(),u=E(),l=k({signinError:!1});function f(t){return t=t||{enableHighAccuracy:!1,timeout:1e4,maximumAge:0},new Promise((n,r)=>navigator.geolocation.getCurrentPosition(n,r,t))}function v(){const t={};f().then(n=>{t.latitude=n.coords.latitude,t.longitude=n.coords.longitude,e.debug(e.context(),"getLocation:",t)}).catch(n=>{e.error(e.context(),"getLocation error",n)}).finally(async()=>{let n={login_location:t};const{data:r,error:a}=await L("/api/person/me",{body:n});a?e.error(e.context(),a):e.debug(e.context(),"updatePosition returns",r),await M(),e.debug(e.context(),"getLocation done")})}A(async()=>{var n,r;const t=B();e.debug(e.context(),">>>>>>>>    OnBeforeMount entering"),t.clear();try{const a=navigator.languages&&navigator.languages.length?navigator.languages[0]:navigator.language,d=Intl.DateTimeFormat().resolvedOptions().timeZone,o=await V("/api/person/register",{body:{language:a,tz:d}});if(e.debug(e.context(),"register returns",o),e.debug(e.context(),"register error",o.error),!o.response.ok||!o.data)throw e.error(e.context(),"auth-done: register error",o.error,o.response.status),o.response.status==403&&(e.error(e.context(),"person not allowed"),l.signinError=!0),new Error("register failed");if(e.debug(e.context(),"person",o.data.person),t.person=o.data.person,e.debug(e.context(),"userStore.accounts = ",t.accounts),o.data.person.validation==="New")e.debug(e.context(),"new person: go to profile",o.data.person),u.push({name:"signup_profile"});else if(o.data.person.validation==="Verified")e.debug(e.context(),"new person verified, go to invitations"),u.push({name:"signup_profile"});else if(o.data.person.validation==="Filled")e.debug(e.context(),"new person filled, go to verify"),t.invitationCount=((n=o.data.invite_list)==null?void 0:n.length)??0,u.push({name:"signup_invitations"});else if(o.data.person.validation==="Ready"){if(await t.setAccounts(o.data.user_list,o.data.admin_list,o.data.owner_list),t.invitationCount=((r=o.data.invite_list)==null?void 0:r.length)??0,e.debug(e.context(),"userStore.accounts",t.accounts,"invitation count = ",t.invitationCount),v(),!t.currentAccount)throw new Error("invalid account state");if(t.currentAccount.role=="admin")u.push({name:"chats"});else if(t.currentAccount.role=="user")P();else throw new Error("unknown role")}else throw new Error("unknown validation state")}catch(a){e.error(e.context(),"register error",a),l.signinError||await g(),e.error(e.context(),"<<<<<<<   OnBeforeMount exiting")}e.debug(e.context(),"<<<<<<<   OnBeforeMount exiting")});async function m(){await g()}return(t,n)=>{const r=s("v-card-title"),a=s("v-card-text"),d=s("v-spacer"),o=s("v-btn"),x=s("v-card-actions"),w=s("v-card"),h=s("v-dialog");return O(),N(h,{modelValue:l.signinError,"onUpdate:modelValue":n[0]||(n[0]=b=>l.signinError=b),persistent:"",width:"400"},{default:i(()=>[c(w,null,{default:i(()=>[c(r,null,{default:i(()=>[p("sibs.ai is open for alpha-testers")]),_:1}),c(a,null,{default:i(()=>[S,T]),_:1}),c(x,null,{default:i(()=>[c(d),c(o,{color:"primary",onClick:m},{default:i(()=>[p("Close")]),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"])}}});export{R as default};
